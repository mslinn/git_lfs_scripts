#!/bin/bash

function help {
  if [ "$1" ]; then echo "$1"; fi
  echo "$(basename "$0") - Create a new bare Git repository.

Syntax: $(basename "$0") /path/to/new/repo

Normally this script would be run on a Git server, because
that is where bare Git repositories normally live.

A new Git repository will be created in /path/to/new/repo,
which should not already exist.

The SGID permission for the new Git repository will be set.

The parent directory (/path/to/new/) must already exist.
The name of the repo must not contain spaces.

Git configuration parameter 'receive.denyCurrentBranch' is set to ignore.
"
  exit 1
}

function configure {
  git config receive.denyCurrentBranch ignore
}

function initialize {
  echo "Making an empty bare Git repository in $REPO_PATH/$REPO_NAME"
  mkdir --mode=g+s "$REPO_PATH/$REPO_NAME"
  sudo chgrp git_access test_repo2.git
  git init --bare --shared=everybody "$REPO_PATH/$REPO_NAME"
}

function report {
  # if [ "$( which tree )" ]; then
  #   echo "The new repository contains the following subdirectory tree"
  #   tree -d
  # fi
  echo "The bare repository was created in '$( pwd )'."
}


if [ -z "$1" ]; then help; fi

cd "$1" || exit 1
export REPO_PATH="$( dirname "$(pwd)" )"
export REPO_NAME="$( basename "$1" )"
if [ -f "$REPO_PATH/$REPO_NAME" ]; then help "Error: '$PATH/$REPO_NAME' already exists."; fi

initialize "$1"
cd "$REPO_PATH/$REPO_NAME" || exit 3
configure
report
